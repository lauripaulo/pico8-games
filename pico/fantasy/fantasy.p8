pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

-- initial
flts = {}
msgs = {}

-- game constants
typ_player = 1
typ_enemy = 2
typ_npc = 3
state_start_screen = 1
state_playing = 2
state_game_over = 3
state_win = 4

-- player
player = nil

-- state machine
function change_state(_state)
  if _state == state_start_screen then
    _init = start_screen_init
    _update = start_screen_update
    _draw = start_screen_draw
    start_screen_init()
  elseif _state == state_playing then
    _init = game_init
    _update = game_update
    _draw = game_draw
    game_init()
  elseif _state == state_game_over then
    _init = game_over_init
    _update = game_over_update
    _draw = game_over_draw
    game_over_init()
  elseif _state == state_win then
    _init = win_init
    _update = win_update
    _draw = win_draw
    win_init()
  end
end

-- title screen
function start_screen_init()
end

function start_screen_update()
  if btnp(4) then
    change_state(state_playing)
  end
end

function start_screen_draw()
  cls()
  printo("fantasy game", col2x(2), row2y(2), 7)
  printo("-- press z to start --", col2x(2), row2y(10), 7)
end

-- playing game
function game_init()
  player = create_obj(64, 64, typ_player, "Zeno")
  player.atk = 55
  player.def = 45
  player.hp = 20
  player.max_hp = 20
  player.gold = 0
  player.exp = 0
  player.lvl = 1

  addmsg("welcome to the game!", 3, 2)
  addmsg("game loop working ok.", 5, 3)
end

function game_update()
  if btnp(5) then
    change_state(state_game_over)
  end
  update_messages()
end

function game_draw()
  cls()
  printo("playing game...", col2x(2), row2y(2), 7)
  draw_messages(player)
end

-- game over
function game_over_init()
  game_over_timer = 0
end

function game_over_update()
  game_over_timer += 1
  if game_over_timer == 120 then
    change_state(state_start_screen)
  end
end

function game_over_draw()
  cls()
  printo("game over", col2x(2), row2y(2), 7)
end

-- win game!!!
function win_init()
end

function win_update()
end

function win_draw()
end

-- initial game state
change_state(state_start_screen)

-->8
-- Game Engine functions
-- d6 dices
function roll_d6(_dices)
  local value = 0
  for i = 1, _dices do
    value += flr(rnd(6)) + 1
  end
  return value
end

-- d100 dice
function roll_d100()
  return flr(rnd(100)) + 1
end

-- roll gold for an object
function roll_gold(_obj)
  return _obj.level * roll_d6(2)
end

-- create a new object
function create_obj(_x, _y, _type, _name)
  return {
    x = _x,
    y = _y,
    map_x = 0,
    map_y = 0,
    atk = 0,
    def = 0,
    hp = 0,
    max_hp = 0,
    type = _type,
    inventory = {},
    equipped = {},
    gold = 0,
    exp = 0,
    lvl = 1,
    name = _name,
    spells = {},
    status = {},
    dead = false
  }
end

-->8
-- Helper functions
-- Floater functions
function addflt(_obj, _txt, _colr)
  add(
    flts,
    {
      txt = _txt,
      frames = 0,
      colr = _colr,
      tgr = _obj.y - 10,
      x = _obj.x,
      y = _obj.y
    }
  )
end

function update_flts()
  for fl in all(flts) do
    if fl.frames == 50 then
      del(flts, fl)
      fl = nil
    else
      fl.frames += 1
      fl.y -= (fl.y - fl.tgr) / 10
    end
  end
end

function draw_flts()
  for fl in all(flts) do
    printo(fl.txt, fl.x - 2, fl.y, fl.colr)
  end
end

-- Messages functions
function addmsg(_txt, _secs, _colr)
  add(
    msgs,
    {
      txt = _txt,
      duration = _secs * 60,
      frames = 0,
      colr = _colr
    }
  )
end

function update_messages()
  for ms in all(msgs) do
    if ms.frames
        == ms.duration then
      del(msgs, ms)
      ms = nil
    else
      ms.frames += 1
    end
  end
end

function draw_messages(_obj)
  if #msgs == 0 then
    return
  end
  local sz = (#msgs - 1) * 8
  local ys = 13 * 8 - sz - 3
  local ye = 14 * 8 - 3
  if _obj.map_y > 7 then
    ys = 1
    ye = 11 + sz - 3
  end
  rectfill(5, ys + 1, 125, ye + 1, 0)
  rectfill(4, ys, 124, ye, 7)

  for i = 1, #msgs do
    local txt = msgs[i].txt
    local colr = msgs[i].colr
    color(colr)
    cursor(8, ys + 2 + (i - 1) * 8)
    print(txt)
  end
end

-- draws a sprite to the screen with an outline of the specified colour
function otspr(n, col_outline, x, y, w, h, flip_x, flip_y)
  -- reset palette to black
  for c = 1, 15 do
    pal(c, col_outline)
  end
  -- draw outline
  for xx = -1, 1 do
    for yy = -1, 1 do
      spr(n, x + xx, y + yy, w, h, flip_x, flip_y)
    end
  end
  -- reset palette
  pal()
  -- draw final sprite
  spr(n, x, y, w, h, flip_x, flip_y)
end

-- print to the screen with an outline of the specified colour
function printo(txt, x, y, colr)
  for i = 1, 3 do
    print(txt, x + i - 2, y, 0)
    print(txt, x, y + i - 2, 0)
  end
  print(txt, x, y, colr)
end

function col2x(col)
  return col * 8
end

function x2col(x)
  return flr(x / 8)
end

function row2y(row)
  return row * 8
end

function y2row(y)
  return flr(y / 8)
end

__gfx__
000000000000000000000000011100001000100c0000000000000000088800008000800000000000000000000000000000000000000000000000000000000000
000000000000000000100000100010c000c001000000000000800000800080000080089000000000000000000000000000000000000000000000000000000000
0070070000c0000001c1000010c010000c1c01000080000008980000809080000898080000000000000000000000000000000000000000000000000000000000
0007700000000000001000001000111000c001000000000000800000800088800080080000000000000000000000000000000000000000000000000000000000
00077000000000000000010001110001100010000000000000000800088800088000800000000000000000000000000000000000000000000000000000000000
0070070000000c0000001c1000010c01011100c00000080000008980000809080888088000000000000000000000000000000000000000000000000000000000
0000000000000000000001000001000100000c1c0000000000000800000800080000089800000000000000000000000000000000000000000000000000000000
000000000000000000000000c0001110c00000c00000000000000000000088800090008000000000000000000000000000000000000000000000000000000000
00000000000000006000000000000000000000000000000060000000000000000000000000880008b00b00000000000000000050000000000000000000000000
00000000070000000660070000000000000000000700000006600700000000000000000000700087007000b00d0000d0100500d1000000000000000000000000
000000000070000006760070000000000000000000700000068600800000008000000000800880800a0880b00060060000600600000000000000000000000000
0000000000070000006700070006000600000000000800000068000700060006000000000889880800b8880b0001b00005000000000000000000000000000000
00000000000000000000000000007600000060000000000000000000000086000000600080787800a08878b00008100000058000000000000000000000000000
0000000000000000070000000000676000000760000000000700000000006860000008600708800007088b700060060000600000000000000000000000000000
00000000000000000070000000000670000006760000000000800000008006700000068680007080b00070000d0000d0100b00d0000000000000000000000000
000000000000000000070000000600000000006700000000000700000006000000000067080808800b000b070000000000000500000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000000000000000000000000000000000
00000000000000000000000009999990055aa550050000000449944004000000191111d100000000000000000000000000000000000000000000000000000000
00000aa0000000000944449005555550055aa5500a00000004499440090000001111111100000000000000000000000000000000000000000000000000000000
0aaaaa900000000009999990055555500aaaaaa0050000000999999004000000111d111100000000000000000000000000000000000000000000000000000000
0a0a0aa00000000009466490094664900566a5500600000004669440060000001111d11100000000000000000000000000000000000000000000000000000000
0000000000000000094444900944449005aaaa500500000004999940040000001111111100000000000000000000000000000000000000000000000000000000
044444400444444009944990099449900a5aa5a00a00000009499490090000001d11119100000000000000000000000000000000000000000000000000000000
045445400454454000000000000000000a5aa5a00500000009499490040000001111111100000000000000000000000000000000000000000000000000000000
00222000002220000022200000222000002220000000000000777000000000000000000000000000000000000000000000000000000000000000000000000000
022aaa00022aaa00022aaa00022aaa00022aaa000022200007777700000060000000000000aaa000000060000000000000000000000000000000000000000000
008afc00008afc00008afc00008afc00008afc00022aaa0000777700000760000000a00000a0a000000760000000000000000000000000000000000000000000
085fff00085fff00085fff00085fff00085fff00008afc000777770000076000000999000a000a00000760000000000000000000000000000000000000000000
0859469408594640085946408054664008596690085fff0007777770000760000000a0000a000a00000760000000000000000000000000000000000000000000
08066600080666008006660080066600800466400854664007077000000460000000000000a9a000000460000000000000000000000000000000000000000000
800909008009090080099000000909000800990008090900700770000004000000000000000a0000000400000000000000000000000000000000000000000000
00040400000404000004400000040400000044000804040000077000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d55ddd55d55ddd55d5d55d560000000000000006600000000000060060000060000000000000000000000000000000000000000000000000000000000000000
5dd5d5555dd5d5555d5dd5d599900069960009999990006996000999999000690000000000000000000000000000000000000000000000000000000000000000
5d55d5d555d555d55555555505996699996099500599669999069950059960990000000000000000000000000000000000000000000000000000000000000000
555555d55555ddd55dd5d5d505599995099990500559999509999050015999950000000000000000000000000000000000000000000000000000000000000000
55d55dd55dd555d55555d55500100505050100100050050505010010001005050000000000000000000000000000000000000000000000000000000000000000
5ddd55d55d555dd55d5dd5d500000101010000000000050501000000000005010000000000000000000000000000000000000000000000000000000000000000
555555551cccc1cc5555555500000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000
1cccc1cccc1ccc170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccc7cc17c117ccc70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c1117cc11cc71cc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1ccc17cccccc711c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccccc11cccccccc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c7ccccc111ccc1cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
117cc17cc71cc7110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc1ccc11ccc1cccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000666000000000000000000000ddd00060000600600006006000060077777000777770007777700000000000000000000000000000000000000000000000000
0064446000000000000000d0000dddd0060000600060060006000060070707000707070007070700000bbbb00000000000000000000000000000000000000000
0064f500000dd00000dddddd00dddddd05555550555555550555555000707000007070000070700000b7cc7bb7b0000b7bbb7bb0000000000000000000000000
000fff0000ddddd0dddddddd0ddddddd0545545005455450054554500007000070070070000700000bbbbbbb7bbb0bb7bbbbbbb0000000000000000000000000
00cdddc00dd7c7dddd7c7ddd0dddddd0555555555555555555555555007770000777770000777000b7bbbbbb07b7cc7bbb7cc7b7000000000000000000000000
009ddd900ddddddd0ddddddddd7c7dd00555555005555550055555500707077000070000070707707bbbbb7b0bbbbbbb7bbbbbb0000000000000000000000000
000c0c00dddddddd0dddddddddddddd0005555000050050000555500707770000770770070777000bb7bbbbb07bb7b7b77b7b7b7000000000000000000000000
00090900dddddddd0ddddddd00dddd000500005005000050050000500700070007000070070007007bbb7bb777b7b7b707777770000000000000000000000000
00000000500000500000000050000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000050005050000000005000505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555500085800055555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555000555550005555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555505055505055555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000508580500555550550858050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000055050505000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000500050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
